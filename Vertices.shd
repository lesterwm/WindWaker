#define HAS_POSITIONS

#ifdef HAS_MATRICES
	#define IF_MATRICES(x) x
#else
	#define IF_MATRICES(x) 
#endif 

#ifdef HAS_POSITIONS
	#define IF_POSITION(x) x
#else
	#define IF_POSITION(x)
#endif

#ifdef HAS_NORMALS
	#define IF_NORMAL(x) x
#else
	#define IF_NORMAL(x)
#endif

#ifdef HAS_COLORS0
	#define IF_COLOR0(x) x
#else		   
	#define IF_COLOR0(x)
#endif

#ifdef HAS_COLORS1
	#define IF_COLOR1(x) x
#else		   
	#define IF_COLOR1(x)
#endif

#ifdef HAS_TEXCOORDS0
	#define IF_TEXCOORD0(x) x
#else		   
	#define IF_TEXCOORD0(x)
#endif

#ifdef HAS_TEXCOORDS1
	#define IF_TEXCOORD1(x) x
#else		   
	#define IF_TEXCOORD1(x)
#endif

#ifdef HAS_TEXCOORDS2
	#define IF_TEXCOORD2(x) x
#else		   
	#define IF_TEXCOORD2(x)
#endif

#ifdef HAS_TEXCOORDS3
	#define IF_TEXCOORD3(x) x
#else		   
	#define IF_TEXCOORD3(x)
#endif

#ifdef HAS_TEXCOORDS4
	#define IF_TEXCOORD4(x) x
#else		   
	#define IF_TEXCOORD4(x)
#endif

#ifdef HAS_TEXCOORDS5
	#define IF_TEXCOORD5(x) x
#else		   
	#define IF_TEXCOORD5(x)
#endif

#ifdef HAS_TEXCOORDS6
	#define IF_TEXCOORD6(x) x
#else		   
	#define IF_TEXCOORD6(x)
#endif

#ifdef HAS_TEXCOORDS7
	#define IF_TEXCOORD7(x) x
#else		   
	#define IF_TEXCOORD7(x)
#endif


cbuffer g_PerFrame
{
	float4x4 WorldViewProj;
	float4 globalColor;
}

cbuffer PerBatch
{
	float4x4 ModelMat[10];
}
	
IF_TEXCOORD0( Texture2D Texture0;)
IF_TEXCOORD1( Texture2D Texture1;)
IF_TEXCOORD2( Texture2D Texture2;)
IF_TEXCOORD3( Texture2D Texture3;)
IF_TEXCOORD4( Texture2D Texture4;)
IF_TEXCOORD5( Texture2D Texture5;)
IF_TEXCOORD6( Texture2D Texture6;)
IF_TEXCOORD7( Texture2D Texture7;)
	
IF_TEXCOORD0( SamplerState Sampler0;)
IF_TEXCOORD1( SamplerState Sampler1;)
IF_TEXCOORD2( SamplerState Sampler2;)
IF_TEXCOORD3( SamplerState Sampler3;)
IF_TEXCOORD4( SamplerState Sampler4;)
IF_TEXCOORD5( SamplerState Sampler5;)
IF_TEXCOORD6( SamplerState Sampler6;)
IF_TEXCOORD7( SamplerState Sampler7;)

struct VsIn
{
	IF_MATRICES(	uint   MatIndex : Generic   ;)
	IF_POSITION(	float3 Position : Position	;)
	IF_NORMAL(		float3 Normal	: Normal	;)
	IF_COLOR0(		uint4  Color0	: Color0	;)
	IF_COLOR1(		uint4  Color1	: Color1	;)
	IF_TEXCOORD0(	float2 TexCoord0: Texcoord0	;)
	IF_TEXCOORD1(	float2 TexCoord1: Texcoord1	;)
	IF_TEXCOORD2(	float2 TexCoord2: Texcoord2	;)
	IF_TEXCOORD3(	float2 TexCoord3: Texcoord3	;)
	IF_TEXCOORD4(	float2 TexCoord4: Texcoord4	;)
	IF_TEXCOORD5(	float2 TexCoord5: Texcoord5	;)
	IF_TEXCOORD6(	float2 TexCoord6: Texcoord6	;)
	IF_TEXCOORD7(	float2 TexCoord7: Texcoord7	;)
};

struct PsIn
{
	float4 Position : SV_Position;
	IF_TEXCOORD0(	float2 TexCoord0: Texcoord0	;)
	IF_TEXCOORD1(	float2 TexCoord1: Texcoord1	;)
	IF_TEXCOORD2(	float2 TexCoord2: Texcoord2	;)
	IF_TEXCOORD3(	float2 TexCoord3: Texcoord3	;)
	IF_TEXCOORD4(	float2 TexCoord4: Texcoord4	;)
	IF_TEXCOORD5(	float2 TexCoord5: Texcoord5	;)
	IF_TEXCOORD6(	float2 TexCoord6: Texcoord6	;)
	IF_TEXCOORD7(	float2 TexCoord7: Texcoord7	;)
};

[Vertex shader]

PsIn main(VsIn In)
{
	PsIn Out;
	float4 position = float4(In.Position, 1.0);
	uint matIndex = 0;

	// Use first matrix as default, unless we have a matrix index
	IF_MATRICES( matIndex = In.MatIndex);

	position = mul(ModelMat[matIndex], position);
	Out.Position = mul(WorldViewProj, position);
	
	IF_TEXCOORD0( Out.TexCoord0 = In.TexCoord0 ;)
	IF_TEXCOORD1( Out.TexCoord0 = In.TexCoord1 ;)
	IF_TEXCOORD2( Out.TexCoord0 = In.TexCoord2 ;)
	IF_TEXCOORD3( Out.TexCoord0 = In.TexCoord3 ;)
	IF_TEXCOORD4( Out.TexCoord0 = In.TexCoord4 ;)
	IF_TEXCOORD5( Out.TexCoord0 = In.TexCoord5 ;)
	IF_TEXCOORD6( Out.TexCoord0 = In.TexCoord6 ;)
	IF_TEXCOORD7( Out.TexCoord0 = In.TexCoord7 ;)

	return Out;
}


[Fragment shader]

float4 main(PsIn In) : SV_Target
{
	IF_TEXCOORD0( float4 tex0 = Texture0.Sample( Sampler0, In.TexCoord0 ); )
	IF_TEXCOORD1( float4 tex1 = Texture1.Sample( Sampler1, In.TexCoord1 ); )
	IF_TEXCOORD2( float4 tex2 = Texture2.Sample( Sampler2, In.TexCoord2 ); )
	IF_TEXCOORD3( float4 tex3 = Texture3.Sample( Sampler3, In.TexCoord3 ); )
	IF_TEXCOORD4( float4 tex4 = Texture4.Sample( Sampler4, In.TexCoord4 ); )
	IF_TEXCOORD5( float4 tex5 = Texture5.Sample( Sampler5, In.TexCoord5 ); )
	IF_TEXCOORD6( float4 tex6 = Texture6.Sample( Sampler6, In.TexCoord6 ); )
	IF_TEXCOORD7( float4 tex7 = Texture7.Sample( Sampler7, In.TexCoord7 ); )

	// TODO: Use the TEV properties from the material to combine these
	IF_TEXCOORD0( return tex0; )

	return globalColor;
}
