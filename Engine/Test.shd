struct VsIn
{
	uint   MatIndex : Generic;
	float3 Position : Position;	
	float3 Normal	: Normal;	
	uint4  Color0	: Color0;	
	uint4  Color1	: Color1;	
	float2 TexCoord0: Texcoord0;
	float2 TexCoord1: Texcoord1;
	float2 TexCoord2: Texcoord2;
	float2 TexCoord3: Texcoord3;
	float2 TexCoord4: Texcoord4;
	float2 TexCoord5: Texcoord5;
	float2 TexCoord6: Texcoord6;
	float2 TexCoord7: Texcoord7;
};

struct PsIn
{
	float4 Position : SV_Position;
};

cbuffer g_PerFrame
{
	float4x4 WorldViewProj;
}

[Vertex shader]

PsIn main(VsIn In)
{
	PsIn Out;
	float4 position = float4(In.Position, 1.0);
	Out.Position = mul(WorldViewProj, position);

	return Out;
}


[Fragment shader]

float4 main(PsIn In) : SV_Target
{
	return 1.0f;
}